on:
  workflow_call:
    inputs:
      application:
        required: true
        type: string
      lambda-name:
        required: true
        type: string
      files-folders-to-add:
        required: true
        type: string
    outputs:
      lambda-artifact-name:
        description: "Constructed name of the lambda artifact"
        value: ${{ jobs.build.outputs.lambda-artifact-name }}

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      lambda-artifact-name: ${{ steps.construct-lambda-artifact-name.outputs.name }}
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v3

      - name: "üîß install python 3.9"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: "üíæ fetch project dependencies"
        uses: actions/cache@v3
        with:
          key: ${{ inputs.application }}-dependencies-${{ github.run_number }}
          path: ./${{ inputs.application }}/source/venv
          fail-on-cache-miss: true

      - name: "üîß construct lambda artifact name"
        id: construct-lambda-artifact-name
        run: |
          LAMBDA_ARTIFACT_NAME=${{ inputs.lambda-name }}-${{ github.run_number }}.zip
          echo "name=${LAMBDA_ARTIFACT_NAME}" >> "$GITHUB_OUTPUT"

      - name: "üîç run build"
        run: |
          APP="${{ inputs.application }}"
          FILES_FOLDERS_TO_ADD="${{ inputs.files-folders-to-add }}"
          LAMBDA_ARTIFACT_NAME="${{ steps.construct-lambda-artifact-name.outputs.name }}"

          cd "${APP}"/source || exit

          echo "Creating a directory for artifact."
          mkdir target

          echo "Creating a package with dependencies."
          (
            cd venv/lib/python3.9/site-packages/ || exit
            zip -q -r ../../../../target/"${LAMBDA_ARTIFACT_NAME}" .
          )

          echo "Adding source code to the package."
          zip -q -g -r target/"${LAMBDA_ARTIFACT_NAME}" $FILES_FOLDERS_TO_ADD

          echo "Created artifact."
          ls -l target/"${LAMBDA_ARTIFACT_NAME}"

      - name: "üíæ save lambda artifact"
        uses: actions/cache@v3
        with:
          key: ${{ inputs.application }}-artifacts-${{ github.run_number }}
          path: ./${{ inputs.application }}/source/target
